- name: Download nodejs binary package
  get_url: url=https://nodejs.org/dist/v8.11.3/node-v8.11.3-linux-x64.tar.xz
           dest=/tmp/node-v8.11.3-linux-x64.tar.xz
- name: Create install directory
  file: path=/usr/local/lib/nodejs
        state=directory
        mode=0755
  become: yes
- name: Unarchive nodejs into install directory
  unarchive:
    src: /tmp/node-v8.11.3-linux-x64.tar.xz
    dest: /usr/local/lib/nodejs
    remote_src: yes
    extra_opts: ["--strip-components=1"]
  become: yes
- name: Link node binary
  file:
    src: /usr/local/lib/nodejs/bin/node
    dest: /usr/local/bin/node
    state: link
  become: yes
- name: Link npm binary
  file:
    src: /usr/local/lib/nodejs/bin/npm
    dest: /usr/local/bin/npm
    state: link
  become: yes
- name: Upload Techorrect dashboard archive
  unarchive:
    src: dash.tar.gz
    dest: /home/ec2-user
- name: Copy ExpressJS bash start script
  copy:
    src: start_backend.sh
    dest: /home/ec2-user/dashboard/dashboard-server/start_backend.sh
    mode: 0755
- name: Copy systemd file
  copy:
    src: techorrect_dashboard_backend.service
    dest: /etc/systemd/system/techorrect_dashboard_backend.service
  become: yes
- name: Upload credentials in config.json template
  template:
    src: config.json.j2
    dest: /home/ec2-user/dashboard/dashboard-server/config.json
- name: Install Techorrect backend server packages based on package.json
  npm:
    path: /home/ec2-user/dashboard/dashboard-server
    # executable: /usr/local/bin/npm #https://github.com/ansible/ansible/issues/29240
  environment:
    PATH: "/usr/local/bin:{{ ansible_env.PATH }}"
- name: enable Techorrect backend service and ensure it is not masked
  systemd:
    name: techorrect_dashboard_backend
    enabled: yes
    masked: no
  become: yes
- name: Start Techorrect backend service
  systemd: state=started name=techorrect_dashboard_backend
  become: yes

# Most of the following steps can be omitted after the build process has been moved to a pipeline in Concourse
- name: Install Techorrect GUI packages based on package.json
  npm:
    path: /home/ec2-user/dashboard/gui
  environment:
    PATH: "/usr/local/bin:{{ ansible_env.PATH }}"
# git is a requirement for bower install later on
- name: Install git
  yum:
    name: git
    state: latest
  become: yes
- name: Install bower
  npm:
    path: /home/ec2-user/dashboard/gui
    name: bower
    global: no
  environment:
    PATH: "/usr/local/bin:{{ ansible_env.PATH }}"
- name: Install gulp
  npm:
    path: /home/ec2-user/dashboard/gui
    name: gulp-cli
    global: no
  environment:
    PATH: "/usr/local/bin:{{ ansible_env.PATH }}"
- name: Install bower packages based on bower.json
  bower:
    path: /home/ec2-user/dashboard/gui
    relative_execpath: node_modules/.bin
  environment:
    PATH: "/usr/local/bin:{{ ansible_env.PATH }}"
- name: Build minified files using gulp
  command: node_modules/.bin/gulp
  args:
    chdir: /home/ec2-user/dashboard/gui
  environment:
    PATH: "/usr/local/bin:{{ ansible_env.PATH }}"
- name: Clear default nginx files
  shell: rm -rf /usr/share/nginx/html/*
  become: yes
- name: Move minified files to nginx dir
  shell: mv /home/ec2-user/dashboard/gui/dist/* /usr/share/nginx/html
  become: yes
- name: Start nginx
  systemd: state=started name=nginx
  become: yes

# Dashboard data set up
- name: Login to vault
  local_action: shell curl -s --request POST --data '{"role_id":"{{ vaultRoleId }}", "secret_id":"{{ vaultSecretId }}"}' {{ vault_addr }}/v1/auth/approle/login | jq -r '.auth.client_token' > {{ playbook_dir }}/dashboardtoken
  run_once: True
  tags: seed-data

- name: Add redmineAdmin user
  vars:
    vault_token: "{{ lookup('file', '{{ playbook_dir }}/dashboardtoken') }}"
    redmine_admin_username: "{{ lookup('hashi_vault', 'secret=concourse/main/redmineAdmin-username:value token={{ vault_token }} url={{ vault_addr }}')}}"
    redmine_admin_pass: "{{ lookup('hashi_vault', 'secret=concourse/main/redmineAdmin-password:value token={{ vault_token }} url={{ vault_addr }}')}}"
  uri:
    url: https://dashboard.techorrect.com:3000/users/register
    method: POST
    body: |
      {	"username": "{{ redmine_admin_username }}",
        "password": "{{ redmine_admin_pass }}",
        "admin": "true"
      }
    body_format: json
  tags: seed-data

- name: Login redmineAdmin user
  vars:
    vault_token: "{{ lookup('file', '{{ playbook_dir }}/dashboardtoken') }}"
    redmine_admin_username: "{{ lookup('hashi_vault', 'secret=concourse/main/redmineAdmin-username:value token={{ vault_token }} url={{ vault_addr }}')}}"
    redmine_admin_pass: "{{ lookup('hashi_vault', 'secret=concourse/main/redmineAdmin-password:value token={{ vault_token }} url={{ vault_addr }}')}}"
  uri:
    url: https://dashboard.techorrect.com:3000/users/login
    method: POST
    body: |
      {	"username": "{{ redmine_admin_username }}",
        "password": "{{ redmine_admin_pass }}"
      }
    body_format: json
  register: dashboardLogin
  tags: seed-data

- name: Create Redmine project in dashboard
  uri:
    url: https://dashboard.techorrect.com:3000/projects
    method: POST
    headers:
      x-access-token: "{{ dashboardLogin.json.token }}"
    body: |
      {
        "name": "Redmine",
        "healthyFailedLevel": 5,
        "healthyDisabledLevel": 10,
        "healthySkippedLevel": 5
        }
    body_format: json
    return_content: yes
  register: projectCreated
  tags: seed-data

- name: Store Redmine project ID in vault
  vars:
    vault_token: "{{ lookup('file', '{{ playbook_dir }}/dashboardtoken') }}"
  uri:
    url: https://vault.techorrect.com:8200/v1/concourse/main/redmineProjectId
    method: POST
    headers:
      X-Vault-Token: "{{ vault_token }}"
    body: |
      {"value": "{{ projectCreated.content | regex_replace('Added the project with id: ', '')}}" }
    body_format: json
    status_code: 204
  tags: seed-data

- name: Make user assigned to redmine project
  vars:
    vault_token: "{{ lookup('file', '{{ playbook_dir }}/dashboardtoken') }}"
    redmine_admin_username: "{{ lookup('hashi_vault', 'secret=concourse/main/redmineAdmin-username:value token={{ vault_token }} url={{ vault_addr }}')}}"
  uri:
    url: "https://dashboard.techorrect.com:3000/users/{{ redmine_admin_username }}"
    method: PUT
    headers:
      x-access-token: "{{ dashboardLogin.json.token }}"
    body: |
      {	"username": "{{ redmine_admin_username }}",
        "admin": "true",
        "projects": ["{{ projectCreated.content | regex_replace('Added the project with id: ', '') }}"]
      }
    body_format: json
  tags: seed-data
